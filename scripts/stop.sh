#!/bin/bash

# Script para parar o laborat√≥rio de automa√ß√£o
# Autor: Automation Lab
# Vers√£o: 1.0

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para imprimir mensagens coloridas
print_message() {
    local color=$1
    local message=$2
    echo -e "${color}${message}${NC}"
}

# Fun√ß√£o para parar os servi√ßos
stop_services() {
    print_message $BLUE "üõë Parando servi√ßos..."
    
    if docker-compose ps | grep -q "Up"; then
        docker-compose stop
        print_message $GREEN "‚úÖ Servi√ßos parados"
    else
        print_message $YELLOW "‚ö†Ô∏è  Nenhum servi√ßo estava rodando"
    fi
}

# Fun√ß√£o para remover containers (opcional)
remove_containers() {
    if [ "$1" = "--remove" ] || [ "$1" = "-r" ]; then
        print_message $BLUE "üóëÔ∏è  Removendo containers..."
        docker-compose down
        print_message $GREEN "‚úÖ Containers removidos"
    fi
}

# Fun√ß√£o para limpar volumes (opcional)
clean_volumes() {
    if [ "$1" = "--clean" ] || [ "$1" = "-c" ]; then
        print_message $YELLOW "‚ö†Ô∏è  Removendo volumes (dados ser√£o perdidos)..."
        read -p "Tem certeza? (y/N): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            docker-compose down -v
            print_message $GREEN "‚úÖ Volumes removidos"
        else
            print_message $BLUE "‚ÑπÔ∏è  Opera√ß√£o cancelada"
        fi
    fi
}

# Fun√ß√£o para mostrar ajuda
show_help() {
    echo "Uso: $0 [op√ß√µes]"
    echo ""
    echo "Op√ß√µes:"
    echo "  --remove, -r    Remove os containers ap√≥s parar"
    echo "  --clean, -c     Remove containers e volumes (CUIDADO: dados ser√£o perdidos)"
    echo "  --help, -h      Mostra esta ajuda"
    echo ""
}

# Fun√ß√£o principal
main() {
    case "$1" in
        --help|-h)
            show_help
            exit 0
            ;;
        --clean|-c)
            print_message $BLUE "üîß Parando e limpando laborat√≥rio..."
            stop_services
            clean_volumes "$1"
            ;;
        --remove|-r)
            print_message $BLUE "üîß Parando e removendo containers..."
            stop_services
            remove_containers "$1"
            ;;
        *)
            print_message $BLUE "üîß Parando laborat√≥rio..."
            stop_services
            ;;
    esac
    
    print_message $GREEN "‚úÖ Opera√ß√£o conclu√≠da!"
}

# Executar fun√ß√£o principal
main "$@"